/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_timer_classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/timer-classes.js */ \"./src/js/modules/timer-classes.js\");\n\r\n\r\nconst timer = new _modules_timer_classes_js__WEBPACK_IMPORTED_MODULE_0__.CountdownTimer('.timer', {\r\n  type: 'number',\r\n  time: 10,\r\n  changeTitle: false,\r\n  autoDestroy: false,\r\n  autoGenerate: true,\r\n});\r\ntimer.init();\r\n\n\n//# sourceURL=webpack://gulp-start/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/default.js":
/*!***********************************!*\
  !*** ./src/js/modules/default.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultOptions\": () => (/* binding */ defaultOptions)\n/* harmony export */ });\nconst defaultOptions = {\r\n  type: 'number',\r\n  time: 1,\r\n  changeTitle: false,\r\n  autoDestroy: false,\r\n  autoGenerate: true,\r\n};\r\n\n\n//# sourceURL=webpack://gulp-start/./src/js/modules/default.js?");

/***/ }),

/***/ "./src/js/modules/timer-classes.js":
/*!*****************************************!*\
  !*** ./src/js/modules/timer-classes.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CountdownTimer\": () => (/* binding */ CountdownTimer)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/js/modules/utils.js\");\n/* harmony import */ var _default_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./default.js */ \"./src/js/modules/default.js\");\n\r\n\r\n\r\nconst timerClassNames = ['timer-hours', 'timer-minutes', 'timer-seconds'];\r\n\r\nconst timeValues = {\r\n  secInMin: 60,\r\n  secInHour: 60 * 60,\r\n  msInSec: 1000,\r\n};\r\n\r\nclass CountdownTimer {\r\n  digitClassName = 'timer-digit';\r\n  itemClassName = 'timer-item';\r\n  maxValue = 99;\r\n  destroyState = false;\r\n\r\n  constructor(wrapper, props) {\r\n    const options = Object.assign(_default_js__WEBPACK_IMPORTED_MODULE_1__.defaultOptions, props);\r\n    this.inputTime = options.time;\r\n    this.changeTitle = options.changeTitle;\r\n    this.type = options.type;\r\n    this.autoDestroy = options.autoDestroy;\r\n    this.autoGenerate = options.autoGenerate;\r\n\r\n    if (typeof wrapper === 'object') {\r\n      this.wrapper = wrapper;\r\n    } else {\r\n      this.wrapper = document.querySelector(wrapper);\r\n    }\r\n  }\r\n\r\n  isTypeDate() {\r\n    return this.type === 'date';\r\n  }\r\n\r\n  isTypeNumber() {\r\n    return this.type === 'number';\r\n  }\r\n\r\n  createStructure() {\r\n    const pattern = `\r\n    <span class=\"${this.digitClassName}\"></span>\r\n    <span class=\"${this.digitClassName}\"></span>`;\r\n\r\n    for (const className of timerClassNames) {\r\n      const div = document.createElement('DIV');\r\n      div.classList.add(this.itemClassName, className);\r\n      div.insertAdjacentHTML('afterbegin', pattern);\r\n      this.wrapper.appendChild(div);\r\n    }\r\n  }\r\n\r\n  getRemainingTime() {\r\n    return Math.floor(this.inputTime * timeValues.secInHour);\r\n  }\r\n\r\n  getRemainingTimeOnDate() {\r\n    const currentTime = new Date().getTime();\r\n    const countTime = new Date(this.inputTime).getTime();\r\n    const time = Math.floor((countTime - currentTime) / timeValues.msInSec);\r\n    return time;\r\n  }\r\n\r\n  getTimeUnits(time) {\r\n    const units = {\r\n      hours: Math.floor(time / timeValues.secInHour),\r\n      minutes: Math.floor((time % timeValues.secInHour) / timeValues.secInMin),\r\n      seconds: time % timeValues.secInMin,\r\n    };\r\n    return units;\r\n  }\r\n\r\n  splitUnit(unit, place) {\r\n    const splitItems = place.querySelectorAll(`.${this.digitClassName}`);\r\n    const [leftItem, rightItem] = splitItems;\r\n    const [leftDigit, rightDigit] = unit;\r\n    const innerValue = [];\r\n\r\n    if (unit > this.maxValue) {\r\n      throw new Error(`The timer value should not exceed ${this.maxValue}`);\r\n    }\r\n\r\n    for (const item of splitItems) {\r\n      innerValue.push(item.innerHTML);\r\n      setTimeout(() => {\r\n        const [leftValue, rightValue] = innerValue;\r\n        if (leftDigit !== leftValue) {\r\n          leftItem.innerHTML = leftDigit;\r\n        }\r\n        if (rightDigit !== rightValue) {\r\n          rightItem.innerHTML = rightDigit;\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  timerRender(time) {\r\n    const units = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getFormattedTime)(time);\r\n    for (let index = 0; index < this.timerElems.length; index++) {\r\n      const place = this.timerElems[index];\r\n      const unit = units[index];\r\n      this.splitUnit(unit, place);\r\n    }\r\n  }\r\n\r\n  setRemainingTime() {\r\n    if (this.isTypeDate()) {\r\n      this.remainingTime = this.getRemainingTimeOnDate();\r\n    }\r\n    if (this.isTypeNumber()) {\r\n      this.remainingTime = this.getRemainingTime();\r\n    }\r\n  }\r\n\r\n  setTimer() {\r\n    if (this.remainingTime <= 0) return;\r\n    if (this.isTypeDate()) {\r\n      this.remainingTime = this.getRemainingTimeOnDate();\r\n    }\r\n    if (this.isTypeNumber()) --this.remainingTime;\r\n    const time = this.getTimeUnits(this.remainingTime);\r\n    this.timerRender(time);\r\n    if (this.changeTitle) (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.changePageTitle)(time);\r\n  }\r\n\r\n  get time() {\r\n    return this.getTimeUnits(this.remainingTime);\r\n  }\r\n\r\n  insertBeforeStartTimer() {\r\n    let { remainingTime } = this;\r\n    if (remainingTime < 0) remainingTime = 0;\r\n    const time = this.getTimeUnits(remainingTime);\r\n    this.timerRender(time);\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapper.remove();\r\n    this.destroyState = true;\r\n    delete this.wrapper;\r\n  }\r\n\r\n  validation(value) {\r\n    if (this.isTypeNumber()) {\r\n      if (this.inputTime < 0) {\r\n        throw new Error('Input value is smaller than 0');\r\n      }\r\n      if (typeof this.inputTime !== 'number') {\r\n        throw new Error('Invalid input value');\r\n      }\r\n    }\r\n    if (this.isTypeDate()) {\r\n      if (typeof this.inputTime !== 'string') {\r\n        throw new Error('Input value is not a string');\r\n      }\r\n      if (isNaN(value)) {\r\n        throw new Error('Invalid input value');\r\n      }\r\n    }\r\n  }\r\n\r\n  init() {\r\n    if (!this.wrapper) return;\r\n    if (this.autoGenerate) this.createStructure();\r\n    this.timerElems = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getTimerElems)(this.wrapper, timerClassNames);\r\n    this.setRemainingTime();\r\n    this.validation(this.remainingTime);\r\n    this.insertBeforeStartTimer();\r\n    const timer = setInterval(() => {\r\n      this.setTimer();\r\n      if (this.autoDestroy && this.remainingTime <= 0) {\r\n        this.destroy();\r\n      }\r\n      if (this.destroyState) clearInterval(timer);\r\n    }, timeValues.msInSec);\r\n  }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp-start/./src/js/modules/timer-classes.js?");

/***/ }),

/***/ "./src/js/modules/utils.js":
/*!*********************************!*\
  !*** ./src/js/modules/utils.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changePageTitle\": () => (/* binding */ changePageTitle),\n/* harmony export */   \"fixNumber\": () => (/* binding */ fixNumber),\n/* harmony export */   \"getFormattedTime\": () => (/* binding */ getFormattedTime),\n/* harmony export */   \"getTimerElems\": () => (/* binding */ getTimerElems)\n/* harmony export */ });\nconst getTimerElems = (wrapper, classNames) => {\r\n  const elems = [];\r\n  for (const className of classNames) {\r\n    const item = wrapper.querySelector(`.${className}`);\r\n    if (item) elems.push(item);\r\n  }\r\n  return elems;\r\n};\r\n\r\nconst fixNumber = (num) => (num < 10 ? '0' + num : num.toString());\r\n\r\nconst getFormattedTime = (obj) => {\r\n  const array = [];\r\n  for (const key of Object.keys(obj)) {\r\n    const item = obj[key];\r\n    array.push(fixNumber(item));\r\n  }\r\n  return array;\r\n};\r\n\r\nconst changePageTitle = (units) => {\r\n  const array = getFormattedTime(units);\r\n  const [hh, mm, ss] = array;\r\n  document.title = `${hh}:${mm}:${ss}`;\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp-start/./src/js/modules/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;